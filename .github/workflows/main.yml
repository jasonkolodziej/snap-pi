# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Reference: https://github.com/marketplace/actions/snapcraft-multiarch-build
    strategy:
      matrix:
        platform:
        - arm64
    env:
      # https://github.com/marketplace/actions/snapcraft-action#log-in
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      # # Use Samuel's action to get snapcraft
      # - name: Install Snapcraft
      #   uses: samuelmeuli/action-snapcraft@v2
      #   # inform snap/snapcraft that you want to build using lxd (18.04) is
      #   # NOT set like this
      #   with:
      #     use_lxd: ${{ matrix.os == 'ubuntu-18.04' }}
      - uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/snapcraft-multiarch-build#action-inputs
      - uses: diddlesnaps/snapcraft-multiarch-action@v1
        id: snapcraft
        with:
          architecture: ${{ matrix.platform }}
      - uses: actions/upload-artifact@v3
        with:
          name: snap
          path: ${{ steps.snapcraft.outputs.snap }}
      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     ls -al
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      #     snapcraft
  release:
      needs: build
      runs-on: ubuntu-latest
      permissions:
        # Required to release
        contents: write
      steps:
        - name: Retrieve result from build
          uses: actions/download-artifact@v3
          id: results
          with:
            name: snap
      # Runs a set of commands using the runners shell
        - name: Run a multi-line script
          run: |
            ls -al
        - name: GH Release
          uses: softprops/action-gh-release@v0.1.15
          with:
            tag_name: v0.12
            prerelease: true
          # token: ${{ secrets.GITRELEASE_TOKEN }}
            files: ${{ steps.results.outputs.snap }}
            
